import QtQuick 2.15
import QtQuick.Controls 2.15
import ImpactVisualizer 1.0
import QtQuick.

Window {
    id: mainWindow
    width: 900
    height: 1200
    visible: true
    property bool isConnected: false
    property bool selfTestRunning: true

    // LED control properties
    property color headLedColor: "white"
    property color chestLedColor: "white"
    property color bellyLedColor: "white"
    property color feetLedColor: "white"

    property alias networkManager: networkManagerInstance
        NetworkAccessManager {
            id: networkManagerInstance
        }

        function sendLedCommand(zone, action) {
            var request = new XMLHttpRequest()
            request.open("POST", "http://localhost:5000/api/impact")
            request.setRequestHeader("Content-Type", "application/json")
            request.send(JSON.stringify({ zone, action }))
        }


    function setLedColor(led, color) {
            console.log("ðŸ”„ Attempting to set", led, "to", color);

            switch(led) {
                case "head":
                    console.log("Before head change:", headLedColor, "->", color);
                    headLedColor = color;
                    console.log("After head change:", headLedColor);
                    break;
                case "chest":
                    chestLedColor = color;
                    break;
                case "belly":
                    bellyLedColor = color;
                    break;
                case "feet":
                    feetLedColor = color;
                    break;
            }

            // Force update
            headLed.color = Qt.binding(function() { return headLedColor; });
            console.log("Current headLed.color:", headLed.color);
            chestLed.color = Qt.binding(function() { return chestLedColor; });
            bellyLed.color = Qt.binding(function() { return bellyLedColor; });
            feetLed.color = Qt.binding(function() { return feetLedColor; });
        }

    // Function to reset all LEDs to white
    function resetAllLeds() {
        mainWindow.headLedColor = "white";
        mainWindow.chestLedColor = "white";
        mainWindow.bellyLedColor = "white";
        mainWindow.feetLedColor = "white";
    }

    Item {
        id: apiController

        function sendLedCommand(zone, action) {
            var url = "http://localhost:5000/api/impact"
            var request = new XMLHttpRequest()
            var jsonData = JSON.stringify({"zone": zone, "action": action})

            request.open("POST", url)
            request.setRequestHeader("Content-Type", "application/json")

            request.onreadystatechange = function() {
                if (request.readyState === XMLHttpRequest.DONE) {
                    var response = JSON.parse(request.responseText)
                    console.log("API Response:", response)
                    if (response.color) {
                        setLedColor(zone, response.color)
                    }
                }
            }

            request.send(jsonData)
        }
    }

    ImpactVisualizer {
        id: impactVisualizer
        anchors.fill: parent

        // Background image
        Image {
            id: bodySilhouette
            source: "qrc:/HumanBody.png"
            anchors.fill: parent
            fillMode: Image.PreserveAspectFit
        }

        // LED indicators - now using the color properties
        Item {
            // Head LED
            Rectangle {
                id: headLed
                width: 50; height: 50
                radius: width/2
                color: mainWindow.selfTestRunning ? "white" : mainWindow.headLedColor
                border.color: "black"
                border.width: 2
                x: 425
                y: 30
            }

            // Chest LED
            Rectangle {
                id: chestLed
                width: 50; height: 50
                radius: width/2
                color: mainWindow.selfTestRunning ? "white" : mainWindow.chestLedColor
                border.color: "black"
                border.width: 2
                x: 425
                y: 200
            }

            // Belly LED
            Rectangle {
                id: bellyLed
                width: 50; height: 50
                radius: width/2
                color: mainWindow.selfTestRunning ? "white" : mainWindow.bellyLedColor
                border.color: "black"
                border.width: 2
                x: 425
                y: 400
            }

            // Feet LED
            Rectangle {
                id: feetLed
                width: 50; height: 50
                radius: width/2
                color: mainWindow.selfTestRunning ? "white" : mainWindow.feetLedColor
                border.color: "black"
                border.width: 2
                x: 425
                y: 900
            }
        }

        // Self-test sequence
        SequentialAnimation {
            running: true
            onStarted: console.log("Starting LED self-test...")
            onStopped: {
                mainWindow.selfTestRunning = false
                console.log("LED self-test completed")
                // Reset all LEDs to white after test
                resetAllLeds()
            }

            // Test sequence remains the same...
            ScriptAction { script: headLed.color = "yellow" }
            PauseAnimation { duration: 500 }
            ScriptAction { script: headLed.color = "black" }
            PauseAnimation { duration: 200 }

            ScriptAction { script: chestLed.color = "yellow" }
            PauseAnimation { duration: 500 }
            ScriptAction { script: chestLed.color = "black" }
            PauseAnimation { duration: 200 }

            ScriptAction { script: bellyLed.color = "yellow" }
            PauseAnimation { duration: 500 }
            ScriptAction { script: bellyLed.color = "black" }
            PauseAnimation { duration: 200 }

            ScriptAction { script: feetLed.color = "yellow" }
            PauseAnimation { duration: 500 }
            ScriptAction { script: feetLed.color = "black" }
            PauseAnimation { duration: 100 }
            ScriptAction { script: feetLed.color = "white" }

            ParallelAnimation {
                ScriptAction { script: resetAllLeds() }
            }
            PauseAnimation { duration: 1000 }
        }

        // Connection button
        Button {
            width: 100
            height: 50
            text: mainWindow.isConnected ? "Disconnect" : "Connect"
            anchors.right: parent.right
            anchors.verticalCenter: parent.verticalCenter
            enabled: !mainWindow.selfTestRunning
            onClicked: mainWindow.isConnected = !mainWindow.isConnected
        }


        Column {
                anchors.left: parent.left
                anchors.top: parent.top
                spacing: 10
                padding: 20

                Button {
                    text: "API: Head Impact"
                    onClicked: apiController.sendLedCommand("head", "red")
                }

                Button {
                    text: "API: Clear Impacts"
                    onClicked: apiController.sendLedCommand("all", "white")
                }
            }

        // Debug controls - now properly connected
        Column {
                    anchors.right: parent.right
                    anchors.top: parent.top
                    spacing: 10
                    padding: 20
                    visible: !selfTestRunning

                    // Head LED controls
                    Row {
                        spacing: 5
                        Button {
                            text: "Head Green"
                            onClicked: {
                                console.log("ðŸŸ¢ Head Green button pressed");
                                setLedColor("head", "#32cd32");
                            }
                        }
                        Button {
                            text: "Head Red"
                            onClicked: {
                                console.log("ðŸ”´ Head Red button pressed");
                                setLedColor("head", "red");
                            }
                        }
                    }

                    // Chest LED controls
                    Row {
                        spacing: 5
                        Button {
                            text: "Chest Green"
                            onClicked: {
                                console.log("ðŸŸ¢ Chest Green button pressed");
                                setLedColor("chest", "#32cd32");
                            }
                        }
                        Button {
                            text: "Chest Red"
                            onClicked: {
                                console.log("ðŸ”´ Chest Red button pressed");
                                setLedColor("chest", "red");
                            }
                        }
                    }

                    // Belly LED controls
                    Row {
                        spacing: 5
                        Button {
                            text: "Belly Green"
                            onClicked: {
                                console.log("ðŸŸ¢ Belly Green button pressed");
                                setLedColor("belly", "#32cd32");
                            }
                        }
                        Button {
                            text: "Belly Red"
                            onClicked: {
                                console.log("ðŸ”´ Belly Red button pressed");
                                setLedColor("belly", "red");
                            }
                        }
                    }

                    // Feet LED controls
                    Row {
                        spacing: 5
                        Button {
                            text: "Feet Green"
                            onClicked: {
                                console.log("ðŸŸ¢ Feet Green button pressed");
                                setLedColor("feet", "#32cd32");
                            }
                        }
                        Button {
                            text: "Feet Red"
                            onClicked: {
                                console.log("ðŸ”´ Feet Red button pressed");
                                setLedColor("feet", "red");
                            }
                        }
                    }

                    // Reset button
                    Button {
                        text: "Reset All White"
                        onClicked: {
                            console.log("âšª Reset All button pressed");
                            resetAllLeds();
                        }
                    }
                }
    }
}
